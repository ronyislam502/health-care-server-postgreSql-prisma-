// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum UserRole {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum Gender {
  MALE
  FEMALE
}

enum BloodGroup {
  A_POSITIVE  @map("A+")
  B_POSITIVE  @map("B+")
  O_POSITIVE  @map("O+")
  AB_POSITIVE @map("AB+")
  A_NEGATIVE  @map("A-")
  B_NEGATIVE  @map("B-")
  O_NEGATIVE  @map("O-")
  AB_NEGATIVE @map("AB-")
}

enum MaritalStatus {
  MARRIED
  UNMARRIED
}

model User {
  id                 String     @id @default(uuid())
  name               String?
  email              String     @unique
  password           String
  role               UserRole
  needPasswordChange Boolean    @default(true)
  status             UserStatus @default(ACTIVE)
  passwordChangedAt  DateTime?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  admin              Admin?
  doctor             Doctor?
  patient            Patient?

  @@map("users")
}

model Admin {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  avatar    String?
  phone     String   @unique
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [email], references: [email])

  @@map("admins")
}

model Doctor {
  id                  String   @id @default(uuid())
  name                String
  email               String   @unique
  avatar              String?
  phone               String   @unique
  address             String?
  registrationNumber  String   @unique
  experience          Int      @default(0)
  gender              Gender
  appointmentFee      Int
  qualification       String
  currentWorkingPlace String
  designation         String
  isDeleted           Boolean  @default(false)
  createdAt           DateTime @default(now())
  updateAt            DateTime @updatedAt
  user                User     @relation(fields: [email], references: [email])
  doctorSpecialties   DoctorSpecialties[]

  @@map("doctors")
}

model Patient {
  id                 String   @id @unique @default(uuid())
  email              String   @unique
  name               String
  address            String?
  avatar             String?
  phone              String   @unique
  gender             Gender
  isDeleted          Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  user               User     @relation(fields: [email], references: [email])
  patientHealthData  PatientHealthData?
  medicalReport      MedicalReport[]

  @@map("patients")
}

model Specialty{
  id                   String   @id   @default(uuid())
  title                String
  icon                 String?
  doctorSpecialties    DoctorSpecialties[]

  @@map("specialties")
}

model DoctorSpecialties{
  specialtiesId        String
  specialties          Specialty @relation(fields: [specialtiesId], references: [id])

  doctorId             String
  doctor               Doctor @relation(fields: [doctorId], references: [id])

  @@id([specialtiesId, doctorId])
  @@map("doctor_specialties")
}

model PatientHealthData{
  id                    String      @id   @default(uuid())
  patientId             String            @unique
  patient               Patient           @relation(fields: [patientId], references: [id])
  dateOfBirth           String
  bloodGroup            BloodGroup
  hasAllergies          Boolean?          @default(false)
  hasDiabetes           Boolean?          @default(false)
  height                String
  weight                String
  smokingStatus         Boolean?          @default(false)   
  dietaryPreferences    String?
  pregnancyStatus       Boolean?          @default(false)
  mentalHealthHistory   String?
  immunizationStatus    String?
  hasPastSurgeries      Boolean?          @default(false)
  recentAnxiety         Boolean?          @default(false)
  recentDepression      Boolean?          @default(false)
  maritalStatus         MaritalStatus     @default(UNMARRIED)
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt


  @@map("patient_health_datas")
}


model MedicalReport {
  id                 String    @id  @default(uuid())
  patientId          String
  patient            Patient   @relation(fields: [patientId], references: [id])
  reportName         String
  reportLink         String
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt

  @@map("medical_reports")
}
