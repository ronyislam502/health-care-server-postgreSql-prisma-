// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum Gender {
  MALE
  FEMALE
}

enum BloodGroup {
  A_POSITIVE  @map("A+")
  B_POSITIVE  @map("B+")
  O_POSITIVE  @map("O+")
  AB_POSITIVE @map("AB+")
  A_NEGATIVE  @map("A-")
  B_NEGATIVE  @map("B-")
  O_NEGATIVE  @map("O-")
  AB_NEGATIVE @map("AB-")
}

enum MaritalStatus {
  MARRIED
  UNMARRIED
}

model User {
  id                 String     @id @default(uuid())
  name               String?
  email              String     @unique
  password           String
  role               UserRole
  needPasswordChange Boolean    @default(true)
  status             UserStatus @default(ACTIVE)
  passwordChangedAt  DateTime? 
  admin              Admin?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt

  @@map("users")
  }

  model Admin {
    id         String    @id @default(uuid())
    name       String
    email      String    @unique
    avatar     String?
    phone      String
    isDeleted  Boolean   @default(false)
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt

    user User @relation(fields: [email], references: [email])

    @@map("admins")
  }